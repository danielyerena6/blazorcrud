@page "/cervezaform"
@page "/cervezaform/{Id:int}"
@using System.Net.Http;
@using System.Net.Http.Json;
@using Data
@inject HttpClient Http;
@inject NavigationManager NavigationManager;


<h3>CervezaForm</h3>

<EditForm Model="@oCerveza">
    <div class="container-fluid">
        <div class="form-group row mb-1">
            <label class="col-sm-3">Nombre</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oCerveza.Nombre"></InputText>
            </div>

            <label class="col-sm-3">Marca</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oCerveza.Marca"></InputText>
            </div>
        </div>


        <div class="form-group row mb-1">

            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="Save">Guardar</button>
            </div>


        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    Cerveza oCerveza = new Cerveza();
    Respuesta<object> oRespuesta = new Respuesta<object>();
    Respuesta<Cerveza> oRespuestaCerveza = new Respuesta<Cerveza>();
    public string Url = "/api/Cerveza";

    private async Task Save()
    {
        if (Id != 0)
        {
            var response = await Http.PutAsJsonAsync<Cerveza>(Url, oCerveza);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
        }
        else
        {


            var response = await Http.PostAsJsonAsync<Cerveza>(Url, oCerveza);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
        }

        NavigationManager.NavigateTo("/cervezas");

    }

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            oRespuestaCerveza = await Http.GetFromJsonAsync<Respuesta<Cerveza>>(Url + "/" + Id);
            oCerveza = oRespuestaCerveza.Data;
        }
    }
}
